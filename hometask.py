import heapq

def heap_sort(iterable):
    # Створюємо мінімальну купу з усіх елементів ітерабельного об'єкта.
    h = []
    for value in iterable:
        heapq.heappush(h, value)
    
    # Витягуємо елементи впорядковано, формуючи відсортований масив.
    return [heapq.heappop(h) for _ in range(len(h))]

# Масив мережевих кабелів різної довжини
arr = [12, 13, 5, 15, 6, 7, 10]

print("Для мінімізації загальних витрат потрібно з'єднувати кабелі в порядку збільшення їх довжини на кожному з етапів з'єднання, \nтобто від найкоротшого до найдовшого.")
print("Початковий масив мережевих кабелів: ", arr)

sum_cab = 0
while len(arr) > 1:
    arr=heap_sort(arr)
    print("Обєднуємо кабеля з довжинами:", arr[0]," та ", arr[1])
    arr.append(arr[0]+arr[1])
    sum_cab+=arr[-1]
    arr=arr[2:]
print("Загальні витрати на з'єднання кабелів дорівнює ", sum_cab)